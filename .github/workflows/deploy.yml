name: Docker CI/CD Pipeline

# 워크플로우 실행 트리거 설정
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-push:
    name: 도커 이미지화
    runs-on: ubuntu-latest # GitHub Actions 실행 환경

    steps:
      # 1. 리포지토리 코드 체크아웃
      - name: 리포지토리 코드 체크아웃
        uses: actions/checkout@v3

      # 2. Docker Buildx 설정
      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      # 3. Docker Hub 로그인
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 4. Docker 이미지 빌드 및 푸시
      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest

  deploy:
    name: 서버 배포
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH 키 권한 설정
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: 서버에 SSH로 접속하고 파일 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 서버에서 Docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/app
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest
            docker stop nestjs-container || true
            docker rm nestjs-container || true
            docker run -d --name nestjs-container -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest

      - name: Docker 컨테이너 상태 확인
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker ps -a | grep nestjs-container
